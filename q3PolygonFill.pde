// ---------------------------------------------------------------------------------
// Assignment: 1
// Question: 3b
// Name: Kajal Tomar
// ---------------------------------------------------------------------------------
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;

// draws the triangle
void tri(int x0, int y0, int x1, int y1, int x2, int y2, int r, int g, int b) {    
  
  // edge vectors
  PVector e0 = new PVector(x0-x2, y0-y2);
  PVector e1 = new PVector(x1-x0, y1-y0);
  PVector e2 = new PVector(x2-x1, y2-y1);

  // area vectors
  PVector a0 = new PVector();
  PVector a1 = new PVector();
  PVector a2 = new PVector();

 // areas
  float t0;
  float t1; 
  float t2;

  // areas
  float at0;
  float at1; 
  float at2;

  float area; 

  // bounding box boundaries 
  int minX = min(x0, x1, x2);
  int maxX = max(x0, x1, x2);
  
  int minY = min(y0, y1, y2);
  int maxY = max(y0, y1, y2);

  int pointResult;

  // scan line algorithm 
  // go through each pixel
  for(int x = minX; x <= maxX; x++){
    for(int y = minY; y <= maxY; y++){

        area = crossProduct(e1, e0)/2;

        if(area != 0){ // not degenerate

          // draw the outline
          noFill();
          stroke(0,0,0);
          beginShape(TRIANGLES);
              vertex(x0, y0);
              vertex(x0, y0);
              vertex(x1, y1);
          endShape();

          // set the vertex connecting the given point to traingle vertex
          a0.set(x-x2,y-y2);
          a1.set(x-x0,y-y0);
          a2.set(x-x1,y-y1);

          // caculate each area
          t0 = crossProduct(e2, a2)/2;
          t1 = crossProduct(e0, a0)/2;
          t2 = crossProduct(e1, a1)/2;

          // barycentric coordinates
          at0 = t0/area;
          at1 = t1/area;
          at2 = t2/area;

          // [0.52,1] 
          float length = sqrt(at0*at0 + at1*at1 + at2*at2); 

          length = (length-0.52)/0.48; // this now gives length from 0-1

          if(( t0 > 0 ) && (t1 > 0) && (t2 > 0)){
            // all three areas are positive
            // counter - clockwise   
                   
            stroke(r + (255 * (1 - length)),g + (255 * (1 - length)),b + (255 * (1 - length)));   
            drawPoint(x,y);
          }
          else if(( t0 < 0 ) && (t1 < 0) && (t2 < 0)){
            // all three areas are positive
            // clockwise    
            stroke(r - (255 * (1 - length)),g - (255 * (1 - length)),b - (255 * (1 - length)));               
            drawPoint(x,y);
          }

        }
    }

  }
}

// draws polygons using ear clipping method
void polygon(int[][] vertices, int r, int g, int b) {

  // ear clipping needs a mutable list, here's one way to get it
  List<int[]> vs = new LinkedList<int[]>(Arrays.asList(vertices));
  
  // index of vertices in vs
  int lastVertex;
  int currentVertex;
  int nextvertex;

  int[] v0, v1, v2; // actual coordinates of the vertices 

  boolean ccWinding = false; // counter clock wise winding 

  if(vs != null){ 

    ccWinding = checkIfCCWind(vs);

    if(vs.size() >= 3){ //because triangles are composed of three vertices

      // initial set
      lastVertex = vs.size()-1; 
      currentVertex = 0;
      nextvertex = 1;

      while(vs.size() >= 3){
        // get points 
        v0 = vs.get(lastVertex);
        v1 = vs.get(currentVertex);
        v2 = vs.get(nextvertex);

        if(angleInBound(v0,v1,v2,ccWinding) && !pointInside(v0,v1,v2,vs)){
          // if pass both 
          // draw 

          tri(v0[0], v0[1], v1[0], v1[1], v2[0], v2[1], r, g, b);
          vs.remove(currentVertex); // remove from list 
         
          // reset vertices
          lastVertex = vs.size()-1; 
          currentVertex = 0;
          nextvertex = 1;
        }

  
        lastVertex = currentVertex;
        currentVertex = nextvertex; 
        nextvertex++;

        // wrap around so we don't go out of bounds
        if(nextvertex == vs.size()){
          nextvertex = 0;
        }
      }

    }
  }
}

// checks if a point is inside a triangle
boolean pointInside(int[] v0, int[] v1, int[] v2, List<int[]> vs){
  boolean pInside = false;

  int x,y; // to iterate 

  PVector e0 = new PVector(v0[0]-v2[0], v0[1]-v2[1]);
  PVector e1 = new PVector(v1[0]-v0[0], v1[1]-v0[1]);
  PVector e2 = new PVector(v2[0]-v1[0], v2[1]-v1[1]);

  // area vectors
  PVector a0 = new PVector();
  PVector a1 = new PVector();
  PVector a2 = new PVector();
  
  // cross products 
  int e0CrossA0, e1CrossA1, e2CrossA2;

  // scan line algorithm 
  for(int i = 0; i < vs.size(); i++){
        
    x = vs.get(i)[0];
    y = vs.get(i)[1];

    if((x == v0[0] && y == v0[1]) || (x == v1[0] && y==v1[1]) || (x == v2[0] && y==v2[1])){
      // do nothing
      // to skip over the points we know are in the triangle
       // because they are the traingle's vertices
    }
    else {   

      // find the vertices connecting the given point to each vertex of 
      // the triangle
      a0.set(x-v2[0],y-v2[1]);
      a1.set(x-v0[0],y-v0[1]);
      a2.set(x-v1[0],y-v1[1]);
          
      e0CrossA0 =  crossProduct(e0,a0);
      e1CrossA1 =  crossProduct(e1,a1);
      e2CrossA2 =  crossProduct(e2,a2);
          
      if((e0CrossA0 >= 0 && e1CrossA1 >= 0 && e2CrossA2 >= 0 ) ||
      (e0CrossA0 <= 0 && e1CrossA1 <= 0 && e2CrossA2 <= 0 )){
        pInside = true;
        break;
      }
    }          
  }

  return pInside;
}

// to check the winding of the polyogon 
boolean checkIfCCWind(List<int[]> vs){
  boolean counterclockwise = true;
  int area = 0;
  int[] current;
  int[] next; 

  PVector e1,e2;

  // check each vertex
  for(int i = 0; i < vs.size() ; i++){
    current = vs.get(i); 
    next = vs.get((i+1) % vs.size());

    e1 = new PVector(current[0], current[1]);
    e2 = new PVector(next[0]-current[0], next[1]-current[1]);

    // add up all the areas
    area += (crossProduct(e1,e2));
  }

  // check the sign of the area 
  if(area > 0){
    counterclockwise = true;
  }
  else {
    counterclockwise = false; // clockwise 
  }

  return counterclockwise;
  
}

// to check if the angle is inside the boundary 
boolean angleInBound(int[] v0, int[] v1, int[] v2, boolean ccWinding){
  boolean inside = false;
  PVector e1 = new PVector(v1[0]-v0[0], v1[1]-v0[1]);
  PVector e2 = new PVector(v2[0]-v1[0], v2[1]-v1[1]);

  int e1CrossE2 = crossProduct(e1,e2);

  if(ccWinding && (e1CrossE2 > 0)){
    inside = true;
  }
  else if(!ccWinding && (e1CrossE2 < 0)){
    inside = true;
  }

  return inside; 
  
}

int crossProduct(PVector e, PVector a){
    return int(e.x*a.y - e.y*a.x);
}

void drawPoint(int x, int y){
    beginShape(POINTS);
        vertex(x,y);
    endShape();
}

int state = 0;

void setup() {
  size(640, 640, P3D);
  frameRate(30);
  
  // for consistency with the notes, use the OpenGL coordinate system (origin in bottom-left)
  ortho(-width/2, width/2, height/2, -height/2);
  
  noLoop();
}

void draw() {
  background(83, 83, 128);
  
  int total = tris.length + polygons.length;
  int stateMod = state % total;
  
  if (stateMod < tris.length) {
    int[][] tri = tris[stateMod];
    for (int i = 0; i < tri.length; i += 3) {
      tri(tri[i][0], tri[i][1], tri[i+1][0], tri[i+1][1], tri[i+2][0], tri[i+2][1], colours[stateMod][0], colours[stateMod][1], colours[stateMod][2]);
    }
  } else {
    int polyPos = stateMod - tris.length;
    polygon(polygons[polyPos], colours[stateMod][0], colours[stateMod][1], colours[stateMod][2]);
  }

}

void keyPressed() {
  state++;
  redraw();
}

int[][] colours = new int[][] {
  { 0, 180, 255 },
  { 0, 0, 0 },
  { 245, 165, 20 },
  { 0, 180, 255 },
  { 173, 255, 47 },
  { 250, 128, 114 },
  { 255, 255, 0 },
  { 50, 50, 255 },
  { 255, 255, 255 },
  { 65, 105, 225 }
};

int[][][] tris = new int[][][] {
  {
    { 32, 32 },
    { 288, 96 },
    { 160, 288 },
    { 608, 608 },
    { 480, 352 },
    { 352, 544 },
    { 160, 480 },
    { 320, 320 },
    { 480, 160 }
  },
  {
    { 0, 0 },
    { 0, 640 },
    { 480, 0 },
    { 640, 640 },
    { 160, 640 },
    { 640, 0 },
    { 480, 0 },
    { 640, 0 },
    { 0, 640 },
    { 640, 0 },
    { 0, 640 },
    { 160, 640 }
  },
  {
    { 432,353 },
    { 473,391 },
    { 468,316 },
    { 432,353 },
    { 473,391 },
    { 358,385 },
    { 432,353 },
    { 365,341 },
    { 358,385 },
    { 432,353 },
    { 365,341 },
    { 371,331 },
    { 432,353 },
    { 382,272 },
    { 468,316 },
    { 432,353 },
    { 382,272 },
    { 371,331 },
    { 137,110 },
    { 179,91 },
    { 176,134 },
    { 137,110 },
    { 179,91 },
    { 143,85 },
    { 137,110 },
    { 176,134 },
    { 121,144 },
    { 137,110 },
    { 143,85 },
    { 75,87 },
    { 137,110 },
    { 121,144 },
    { 75,87 },
    { 369,73 },
    { 410,6 },
    { 427,102 },
    { 369,73 },
    { 410,6 },
    { 297,30 },
    { 369,73 },
    { 369,122 },
    { 427,102 },
    { 369,73 },
    { 369,122 },
    { 334,86 },
    { 369,73 },
    { 334,86 },
    { 297,30 },
    { 410,6 },
    { 153,3 },
    { 297,30 },
    { 410,6 },
    { 474,30 },
    { 427,102 },
    { 410,6 },
    { 474,30 },
    { 606,10 },
    { 497,85 },
    { 474,30 },
    { 427,102 },
    { 497,85 },
    { 474,30 },
    { 523,42 },
    { 497,85 },
    { 518,86 },
    { 510,92 },
    { 497,85 },
    { 518,86 },
    { 523,42 },
    { 497,85 },
    { 503,96 },
    { 510,92 },
    { 497,85 },
    { 503,96 },
    { 444,122 },
    { 497,85 },
    { 427,102 },
    { 444,122 },
    { 85,537 },
    { 102,534 },
    { 94,531 },
    { 85,537 },
    { 102,534 },
    { 80,573 },
    { 85,537 },
    { 94,531 },
    { 59,502 },
    { 85,537 },
    { 80,573 },
    { 7,536 },
    { 85,537 },
    { 7,536 },
    { 59,502 },
    { 153,3 },
    { 179,91 },
    { 152,74 },
    { 153,3 },
    { 179,91 },
    { 250,97 },
    { 153,3 },
    { 42,40 },
    { 75,87 },
    { 153,3 },
    { 42,40 },
    { 37,24 },
    { 153,3 },
    { 152,74 },
    { 75,87 },
    { 153,3 },
    { 250,97 },
    { 297,30 },
    { 153,3 },
    { 37,24 },
    { 16,21 },
    { 179,91 },
    { 217,104 },
    { 176,134 },
    { 179,91 },
    { 217,104 },
    { 250,97 },
    { 179,91 },
    { 152,74 },
    { 143,85 },
    { 353,602 },
    { 342,607 },
    { 304,527 },
    { 353,602 },
    { 342,607 },
    { 368,618 },
    { 353,602 },
    { 304,527 },
    { 383,586 },
    { 353,602 },
    { 383,586 },
    { 368,618 },
    { 283,389 },
    { 308,329 },
    { 269,318 },
    { 283,389 },
    { 308,329 },
    { 350,382 },
    { 283,389 },
    { 269,318 },
    { 216,403 },
    { 283,389 },
    { 259,429 },
    { 282,465 },
    { 283,389 },
    { 259,429 },
    { 216,403 },
    { 283,389 },
    { 282,465 },
    { 350,382 },
    { 156,438 },
    { 151,462 },
    { 183,496 },
    { 156,438 },
    { 151,462 },
    { 136,438 },
    { 156,438 },
    { 179,415 },
    { 183,496 },
    { 156,438 },
    { 179,415 },
    { 136,438 },
    { 217,104 },
    { 176,134 },
    { 175,211 },
    { 217,104 },
    { 301,212 },
    { 250,97 },
    { 217,104 },
    { 301,212 },
    { 175,211 },
    { 473,391 },
    { 450,482 },
    { 484,436 },
    { 473,391 },
    { 450,482 },
    { 369,458 },
    { 473,391 },
    { 484,436 },
    { 556,408 },
    { 473,391 },
    { 468,316 },
    { 556,408 },
    { 473,391 },
    { 358,385 },
    { 369,458 },
    { 474,30 },
    { 575,29 },
    { 523,42 },
    { 474,30 },
    { 575,29 },
    { 606,10 },
    { 176,134 },
    { 121,144 },
    { 175,211 },
    { 113,191 },
    { 86,343 },
    { 196,280 },
    { 113,191 },
    { 86,343 },
    { 37,265 },
    { 113,191 },
    { 6,158 },
    { 121,144 },
    { 113,191 },
    { 6,158 },
    { 37,265 },
    { 113,191 },
    { 196,280 },
    { 175,211 },
    { 113,191 },
    { 121,144 },
    { 175,211 },
    { 371,487 },
    { 451,544 },
    { 450,482 },
    { 371,487 },
    { 451,544 },
    { 383,586 },
    { 371,487 },
    { 450,482 },
    { 369,458 },
    { 371,487 },
    { 304,527 },
    { 307,493 },
    { 371,487 },
    { 304,527 },
    { 383,586 },
    { 371,487 },
    { 307,493 },
    { 369,458 },
    { 518,86 },
    { 575,29 },
    { 523,42 },
    { 518,86 },
    { 575,29 },
    { 533,136 },
    { 518,86 },
    { 510,92 },
    { 533,136 },
    { 151,462 },
    { 102,534 },
    { 94,531 },
    { 151,462 },
    { 102,534 },
    { 183,496 },
    { 151,462 },
    { 94,531 },
    { 59,502 },
    { 151,462 },
    { 59,502 },
    { 136,438 },
    { 503,96 },
    { 510,92 },
    { 533,136 },
    { 503,96 },
    { 533,136 },
    { 444,122 },
    { 179,415 },
    { 117,364 },
    { 187,361 },
    { 179,415 },
    { 117,364 },
    { 136,438 },
    { 179,415 },
    { 187,361 },
    { 216,403 },
    { 179,415 },
    { 183,496 },
    { 216,403 },
    { 451,544 },
    { 450,482 },
    { 600,526 },
    { 451,544 },
    { 456,555 },
    { 600,526 },
    { 451,544 },
    { 456,555 },
    { 383,586 },
    { 450,482 },
    { 484,436 },
    { 600,526 },
    { 42,40 },
    { 70,89 },
    { 28,38 },
    { 42,40 },
    { 70,89 },
    { 75,87 },
    { 42,40 },
    { 28,38 },
    { 37,24 },
    { 152,74 },
    { 143,85 },
    { 75,87 },
    { 616,610 },
    { 624,622 },
    { 600,526 },
    { 616,610 },
    { 624,622 },
    { 530,616 },
    { 616,610 },
    { 600,526 },
    { 530,616 },
    { 634,213 },
    { 572,242 },
    { 570,250 },
    { 634,213 },
    { 572,242 },
    { 533,136 },
    { 634,213 },
    { 570,250 },
    { 556,408 },
    { 634,213 },
    { 600,526 },
    { 556,408 },
    { 634,213 },
    { 600,526 },
    { 632,637 },
    { 634,213 },
    { 533,136 },
    { 625,31 },
    { 342,607 },
    { 332,630 },
    { 262,629 },
    { 342,607 },
    { 332,630 },
    { 368,618 },
    { 342,607 },
    { 304,527 },
    { 262,629 },
    { 164,593 },
    { 102,534 },
    { 80,573 },
    { 164,593 },
    { 102,534 },
    { 183,496 },
    { 164,593 },
    { 304,527 },
    { 183,496 },
    { 164,593 },
    { 304,527 },
    { 262,629 },
    { 164,593 },
    { 80,573 },
    { 79,577 },
    { 164,593 },
    { 79,577 },
    { 52,626 },
    { 164,593 },
    { 52,626 },
    { 262,629 },
    { 117,364 },
    { 86,343 },
    { 196,280 },
    { 117,364 },
    { 86,343 },
    { 63,356 },
    { 117,364 },
    { 187,361 },
    { 196,280 },
    { 117,364 },
    { 63,356 },
    { 136,438 },
    { 70,89 },
    { 28,38 },
    { 6,158 },
    { 70,89 },
    { 6,158 },
    { 121,144 },
    { 70,89 },
    { 121,144 },
    { 75,87 },
    { 572,242 },
    { 570,250 },
    { 553,266 },
    { 572,242 },
    { 449,199 },
    { 533,136 },
    { 572,242 },
    { 449,199 },
    { 553,266 },
    { 308,329 },
    { 365,341 },
    { 350,382 },
    { 308,329 },
    { 365,341 },
    { 371,331 },
    { 308,329 },
    { 269,318 },
    { 301,212 },
    { 308,329 },
    { 382,272 },
    { 354,225 },
    { 308,329 },
    { 382,272 },
    { 371,331 },
    { 308,329 },
    { 301,212 },
    { 354,225 },
    { 43,603 },
    { 7,536 },
    { 79,577 },
    { 43,603 },
    { 7,536 },
    { 7,618 },
    { 43,603 },
    { 79,577 },
    { 52,626 },
    { 43,603 },
    { 52,626 },
    { 7,618 },
    { 332,630 },
    { 331,637 },
    { 262,629 },
    { 332,630 },
    { 331,637 },
    { 368,618 },
    { 365,341 },
    { 350,382 },
    { 358,385 },
    { 241,283 },
    { 269,318 },
    { 301,212 },
    { 241,283 },
    { 269,318 },
    { 187,361 },
    { 241,283 },
    { 301,212 },
    { 175,211 },
    { 241,283 },
    { 187,361 },
    { 196,280 },
    { 241,283 },
    { 196,280 },
    { 175,211 },
    { 369,122 },
    { 301,212 },
    { 334,86 },
    { 369,122 },
    { 301,212 },
    { 354,225 },
    { 369,122 },
    { 427,102 },
    { 444,122 },
    { 369,122 },
    { 449,199 },
    { 420,223 },
    { 369,122 },
    { 449,199 },
    { 444,122 },
    { 369,122 },
    { 354,225 },
    { 420,223 },
    { 269,318 },
    { 187,361 },
    { 216,403 },
    { 304,527 },
    { 307,493 },
    { 282,465 },
    { 304,527 },
    { 282,465 },
    { 183,496 },
    { 382,272 },
    { 468,316 },
    { 420,223 },
    { 382,272 },
    { 354,225 },
    { 420,223 },
    { 259,429 },
    { 282,465 },
    { 183,496 },
    { 259,429 },
    { 183,496 },
    { 216,403 },
    { 301,212 },
    { 250,97 },
    { 334,86 },
    { 86,343 },
    { 41,324 },
    { 63,356 },
    { 86,343 },
    { 41,324 },
    { 37,265 },
    { 456,555 },
    { 600,526 },
    { 530,616 },
    { 456,555 },
    { 383,586 },
    { 461,576 },
    { 456,555 },
    { 530,616 },
    { 461,576 },
    { 307,493 },
    { 282,465 },
    { 369,458 },
    { 250,97 },
    { 334,86 },
    { 297,30 },
    { 28,38 },
    { 6,158 },
    { 16,21 },
    { 28,38 },
    { 37,24 },
    { 16,21 },
    { 80,573 },
    { 7,536 },
    { 79,577 },
    { 282,465 },
    { 350,382 },
    { 369,458 },
    { 570,250 },
    { 556,408 },
    { 553,266 },
    { 350,382 },
    { 358,385 },
    { 369,458 },
    { 7,536 },
    { 6,158 },
    { 41,324 },
    { 7,536 },
    { 6,158 },
    { 7,618 },
    { 7,536 },
    { 59,502 },
    { 63,356 },
    { 7,536 },
    { 41,324 },
    { 63,356 },
    { 484,436 },
    { 555,422 },
    { 600,526 },
    { 484,436 },
    { 555,422 },
    { 556,408 },
    { 624,622 },
    { 600,526 },
    { 632,637 },
    { 624,622 },
    { 530,616 },
    { 632,637 },
    { 555,422 },
    { 600,526 },
    { 556,408 },
    { 6,158 },
    { 41,324 },
    { 37,265 },
    { 59,502 },
    { 63,356 },
    { 136,438 },
    { 575,29 },
    { 533,136 },
    { 625,31 },
    { 575,29 },
    { 625,31 },
    { 606,10 },
    { 468,316 },
    { 449,199 },
    { 553,266 },
    { 468,316 },
    { 449,199 },
    { 420,223 },
    { 468,316 },
    { 556,408 },
    { 553,266 },
    { 449,199 },
    { 533,136 },
    { 444,122 },
    { 331,637 },
    { 52,626 },
    { 262,629 },
    { 331,637 },
    { 420,630 },
    { 368,618 },
    { 331,637 },
    { 420,630 },
    { 632,637 },
    { 383,586 },
    { 420,630 },
    { 368,618 },
    { 383,586 },
    { 420,630 },
    { 461,576 },
    { 530,616 },
    { 420,630 },
    { 461,576 },
    { 530,616 },
    { 420,630 },
    { 632,637 }
  }
};

int[][][] polygons = new int[][][] {
  {
    { 32, 32 },
    { 608, 96 },
    { 340, 200 },
    { 340, 300 },
    { 608, 608 },
    { 32, 608 },
    { 300, 400 },
    { 160, 200 }
  },
  {
    { 160, 200 },
    { 300, 400 },
    { 32, 608 },
    { 608, 608 },
    { 340, 300 },
    { 340, 200 },
    { 608, 96 },
    { 32, 32 }
  },
  {
    { 160, 512 },
    { 64, 384 },
    { 224, 96 },
    { 352, 160 },
    { 480, 260 },
    { 580, 416 },
    { 320, 576 }
  },
  {
    // star: https://people.sc.fsu.edu/~jburkardt/datasets/polygon/polygon.html
    { 624, 418 },
    { 391, 418 },
    { 320, 640 },
    { 248, 418 },
    { 15, 418 },
    { 203, 282 },
    { 131, 61 },
    { 320, 197 },
    { 508, 61 },
    { 436, 282 }
  },
  {
    // star from above, reverse winding
    { 320, 197 },
    { 131, 61 },
    { 203, 282 },
    { 15, 418 },
    { 248, 418 },
    { 320, 640 },
    { 391, 418 },
    { 624, 418 },
    { 436, 282 },
    { 508, 61 }
  },
  {
    { 400, 240 },
    { 240, 240 },
    { 240, 40 },
    { 40, 40 },
    { 40, 600 },
    { 240, 600 },
    { 240, 400 },
    { 400, 400 },
    { 400, 600 },
    { 600, 600 },
    { 600, 40 },
    { 400, 40 }
  },
  {
    { 4, 633 },
    { 4, 590 },
    { 28, 590 },
    { 28, 557 },
    { 36, 557 },
    { 36, 600 },
    { 12, 600 },
    { 12, 622 },
    { 52, 622 },
    { 52, 590 },
    { 60, 590 },
    { 60, 622 },
    { 100, 622 },
    { 100, 600 },
    { 76, 600 },
    { 76, 568 },
    { 52, 568 },
    { 52, 557 },
    { 76, 557 },
    { 76, 536 },
    { 12, 536 },
    { 12, 568 },
    { 4, 568 },
    { 4, 525 },
    { 76, 525 },
    { 76, 503 },
    { 52, 503 },
    { 52, 492 },
    { 76, 492 },
    { 76, 438 },
    { 52, 438 },
    { 52, 428 },
    { 76, 428 },
    { 76, 406 },
    { 36, 406 },
    { 36, 460 },
    { 60, 460 },
    { 60, 471 },
    { 36, 471 },
    { 36, 503 },
    { 28, 503 },
    { 28, 406 },
    { 12, 406 },
    { 12, 503 },
    { 4, 503 },
    { 4, 330 },
    { 12, 330 },
    { 12, 363 },
    { 28, 363 },
    { 28, 298 },
    { 36, 298 },
    { 36, 330 },
    { 60, 330 },
    { 60, 374 },
    { 52, 374 },
    { 52, 341 },
    { 36, 341 },
    { 36, 374 },
    { 12, 374 },
    { 12, 395 },
    { 132, 395 },
    { 132, 428 },
    { 156, 428 },
    { 156, 438 },
    { 132, 438 },
    { 132, 460 },
    { 172, 460 },
    { 172, 406 },
    { 148, 406 },
    { 148, 395 },
    { 172, 395 },
    { 172, 374 },
    { 124, 374 },
    { 124, 363 },
    { 148, 363 },
    { 148, 330 },
    { 156, 330 },
    { 156, 363 },
    { 172, 363 },
    { 172, 244 },
    { 148, 244 },
    { 148, 212 },
    { 132, 212 },
    { 132, 298 },
    { 148, 298 },
    { 148, 266 },
    { 156, 266 },
    { 156, 309 },
    { 124, 309 },
    { 124, 276 },
    { 100, 276 },
    { 100, 266 },
    { 124, 266 },
    { 124, 244 },
    { 84, 244 },
    { 84, 276 },
    { 60, 276 },
    { 60, 298 },
    { 108, 298 },
    { 108, 330 },
    { 132, 330 },
    { 132, 341 },
    { 108, 341 },
    { 108, 374 },
    { 76, 374 },
    { 76, 363 },
    { 100, 363 },
    { 100, 341 },
    { 76, 341 },
    { 76, 330 },
    { 100, 330 },
    { 100, 309 },
    { 52, 309 },
    { 52, 266 },
    { 76, 266 },
    { 76, 244 },
    { 52, 244 },
    { 52, 212 },
    { 12, 212 },
    { 12, 233 },
    { 36, 233 },
    { 36, 276 },
    { 12, 276 },
    { 12, 309 },
    { 4, 309 },
    { 4, 266 },
    { 28, 266 },
    { 28, 244 },
    { 4, 244 },
    { 4, 201 },
    { 52, 201 },
    { 52, 179 },
    { 28, 179 },
    { 28, 168 },
    { 52, 168 },
    { 52, 147 },
    { 12, 147 },
    { 12, 179 },
    { 4, 179 },
    { 4, 104 },
    { 12, 104 },
    { 12, 136 },
    { 52, 136 },
    { 52, 114 },
    { 28, 114 },
    { 28, 104 },
    { 52, 104 },
    { 52, 82 },
    { 28, 82 },
    { 28, 50 },
    { 12, 50 },
    { 12, 82 },
    { 4, 82 },
    { 4, 39 },
    { 36, 39 },
    { 36, 71 },
    { 52, 71 },
    { 52, 39 },
    { 60, 39 },
    { 60, 104 },
    { 76, 104 },
    { 76, 71 },
    { 84, 71 },
    { 84, 104 },
    { 100, 104 },
    { 100, 39 },
    { 124, 39 },
    { 124, 17 },
    { 84, 17 },
    { 84, 50 },
    { 76, 50 },
    { 76, 17 },
    { 4, 17 },
    { 4, 6 },
    { 132, 6 },
    { 132, 71 },
    { 148, 71 },
    { 148, 6 },
    { 204, 6 },
    { 204, 17 },
    { 156, 17 },
    { 156, 39 },
    { 220, 39 },
    { 220, 6 },
    { 228, 6 },
    { 228, 39 },
    { 268, 39 },
    { 268, 17 },
    { 244, 17 },
    { 244, 6 },
    { 300, 6 },
    { 300, 17 },
    { 276, 17 },
    { 276, 50 },
    { 228, 50 },
    { 228, 104 },
    { 244, 104 },
    { 244, 71 },
    { 276, 71 },
    { 276, 82 },
    { 252, 82 },
    { 252, 114 },
    { 228, 114 },
    { 228, 147 },
    { 220, 147 },
    { 220, 50 },
    { 156, 50 },
    { 156, 71 },
    { 204, 71 },
    { 204, 114 },
    { 196, 114 },
    { 196, 82 },
    { 156, 82 },
    { 156, 104 },
    { 180, 104 },
    { 180, 114 },
    { 156, 114 },
    { 156, 136 },
    { 204, 136 },
    { 204, 147 },
    { 100, 147 },
    { 100, 136 },
    { 148, 136 },
    { 148, 82 },
    { 124, 82 },
    { 124, 50 },
    { 108, 50 },
    { 108, 104 },
    { 132, 104 },
    { 132, 114 },
    { 60, 114 },
    { 60, 136 },
    { 84, 136 },
    { 84, 147 },
    { 60, 147 },
    { 60, 168 },
    { 84, 168 },
    { 84, 179 },
    { 60, 179 },
    { 60, 233 },
    { 76, 233 },
    { 76, 201 },
    { 100, 201 },
    { 100, 168 },
    { 108, 168 },
    { 108, 212 },
    { 84, 212 },
    { 84, 233 },
    { 124, 233 },
    { 124, 201 },
    { 180, 201 },
    { 180, 212 },
    { 156, 212 },
    { 156, 233 },
    { 196, 233 },
    { 196, 179 },
    { 124, 179 },
    { 124, 168 },
    { 204, 168 },
    { 204, 266 },
    { 220, 266 },
    { 220, 233 },
    { 228, 233 },
    { 228, 266 },
    { 252, 266 },
    { 252, 276 },
    { 228, 276 },
    { 228, 330 },
    { 244, 330 },
    { 244, 298 },
    { 268, 298 },
    { 268, 244 },
    { 244, 244 },
    { 244, 233 },
    { 268, 233 },
    { 268, 212 },
    { 244, 212 },
    { 244, 201 },
    { 300, 201 },
    { 300, 212 },
    { 276, 212 },
    { 276, 266 },
    { 292, 266 },
    { 292, 233 },
    { 300, 233 },
    { 300, 266 },
    { 316, 266 },
    { 316, 233 },
    { 324, 233 },
    { 324, 276 },
    { 276, 276 },
    { 276, 309 },
    { 252, 309 },
    { 252, 330 },
    { 292, 330 },
    { 292, 298 },
    { 324, 298 },
    { 324, 309 },
    { 300, 309 },
    { 300, 330 },
    { 340, 330 },
    { 340, 298 },
    { 348, 298 },
    { 348, 341 },
    { 300, 341 },
    { 300, 395 },
    { 316, 395 },
    { 316, 363 },
    { 348, 363 },
    { 348, 374 },
    { 324, 374 },
    { 324, 395 },
    { 364, 395 },
    { 364, 330 },
    { 436, 330 },
    { 436, 309 },
    { 364, 309 },
    { 364, 276 },
    { 340, 276 },
    { 340, 266 },
    { 364, 266 },
    { 364, 244 },
    { 340, 244 },
    { 340, 212 },
    { 316, 212 },
    { 316, 179 },
    { 292, 179 },
    { 292, 168 },
    { 316, 168 },
    { 316, 147 },
    { 276, 147 },
    { 276, 179 },
    { 268, 179 },
    { 268, 147 },
    { 252, 147 },
    { 252, 179 },
    { 228, 179 },
    { 228, 212 },
    { 220, 212 },
    { 220, 168 },
    { 244, 168 },
    { 244, 136 },
    { 316, 136 },
    { 316, 71 },
    { 324, 71 },
    { 324, 104 },
    { 364, 104 },
    { 364, 82 },
    { 340, 82 },
    { 340, 50 },
    { 300, 50 },
    { 300, 114 },
    { 268, 114 },
    { 268, 104 },
    { 292, 104 },
    { 292, 39 },
    { 340, 39 },
    { 340, 17 },
    { 316, 17 },
    { 316, 6 },
    { 348, 6 },
    { 348, 39 },
    { 364, 39 },
    { 364, 6 },
    { 396, 6 },
    { 396, 17 },
    { 372, 17 },
    { 372, 50 },
    { 348, 50 },
    { 348, 71 },
    { 388, 71 },
    { 388, 39 },
    { 420, 39 },
    { 420, 50 },
    { 396, 50 },
    { 396, 71 },
    { 492, 71 },
    { 492, 82 },
    { 468, 82 },
    { 468, 136 },
    { 508, 136 },
    { 508, 114 },
    { 484, 114 },
    { 484, 104 },
    { 508, 104 },
    { 508, 17 },
    { 492, 17 },
    { 492, 50 },
    { 436, 50 },
    { 436, 17 },
    { 412, 17 },
    { 412, 6 },
    { 444, 6 },
    { 444, 39 },
    { 484, 39 },
    { 484, 17 },
    { 460, 17 },
    { 460, 6 },
    { 516, 6 },
    { 516, 39 },
    { 532, 39 },
    { 532, 6 },
    { 540, 6 },
    { 540, 50 },
    { 516, 50 },
    { 516, 104 },
    { 556, 104 },
    { 556, 82 },
    { 532, 82 },
    { 532, 71 },
    { 556, 71 },
    { 556, 6 },
    { 564, 6 },
    { 564, 114 },
    { 540, 114 },
    { 540, 168 },
    { 580, 168 },
    { 580, 147 },
    { 556, 147 },
    { 556, 136 },
    { 588, 136 },
    { 588, 179 },
    { 532, 179 },
    { 532, 114 },
    { 516, 114 },
    { 516, 147 },
    { 492, 147 },
    { 492, 168 },
    { 516, 168 },
    { 516, 201 },
    { 540, 201 },
    { 540, 276 },
    { 508, 276 },
    { 508, 266 },
    { 532, 266 },
    { 532, 244 },
    { 508, 244 },
    { 508, 233 },
    { 532, 233 },
    { 532, 212 },
    { 508, 212 },
    { 508, 179 },
    { 412, 179 },
    { 412, 147 },
    { 388, 147 },
    { 388, 136 },
    { 420, 136 },
    { 420, 168 },
    { 484, 168 },
    { 484, 147 },
    { 460, 147 },
    { 460, 82 },
    { 372, 82 },
    { 372, 104 },
    { 444, 104 },
    { 444, 147 },
    { 436, 147 },
    { 436, 114 },
    { 324, 114 },
    { 324, 136 },
    { 348, 136 },
    { 348, 147 },
    { 324, 147 },
    { 324, 168 },
    { 364, 168 },
    { 364, 136 },
    { 372, 136 },
    { 372, 168 },
    { 396, 168 },
    { 396, 201 },
    { 420, 201 },
    { 420, 212 },
    { 396, 212 },
    { 396, 244 },
    { 388, 244 },
    { 388, 212 },
    { 364, 212 },
    { 364, 201 },
    { 388, 201 },
    { 388, 179 },
    { 324, 179 },
    { 324, 201 },
    { 348, 201 },
    { 348, 233 },
    { 372, 233 },
    { 372, 266 },
    { 396, 266 },
    { 396, 276 },
    { 372, 276 },
    { 372, 298 },
    { 412, 298 },
    { 412, 266 },
    { 420, 266 },
    { 420, 298 },
    { 436, 298 },
    { 436, 244 },
    { 412, 244 },
    { 412, 233 },
    { 436, 233 },
    { 436, 201 },
    { 492, 201 },
    { 492, 212 },
    { 444, 212 },
    { 444, 395 },
    { 460, 395 },
    { 460, 363 },
    { 508, 363 },
    { 508, 341 },
    { 460, 341 },
    { 460, 330 },
    { 508, 330 },
    { 508, 309 },
    { 460, 309 },
    { 460, 298 },
    { 484, 298 },
    { 484, 276 },
    { 460, 276 },
    { 460, 266 },
    { 484, 266 },
    { 484, 244 },
    { 460, 244 },
    { 460, 233 },
    { 492, 233 },
    { 492, 298 },
    { 580, 298 },
    { 580, 276 },
    { 556, 276 },
    { 556, 266 },
    { 580, 266 },
    { 580, 212 },
    { 564, 212 },
    { 564, 244 },
    { 556, 244 },
    { 556, 201 },
    { 588, 201 },
    { 588, 298 },
    { 604, 298 },
    { 604, 266 },
    { 612, 266 },
    { 612, 298 },
    { 628, 298 },
    { 628, 244 },
    { 604, 244 },
    { 604, 168 },
    { 628, 168 },
    { 628, 147 },
    { 604, 147 },
    { 604, 104 },
    { 628, 104 },
    { 628, 82 },
    { 588, 82 },
    { 588, 114 },
    { 580, 114 },
    { 580, 39 },
    { 588, 39 },
    { 588, 71 },
    { 628, 71 },
    { 628, 17 },
    { 612, 17 },
    { 612, 50 },
    { 604, 50 },
    { 604, 17 },
    { 580, 17 },
    { 580, 6 },
    { 636, 6 },
    { 636, 114 },
    { 612, 114 },
    { 612, 136 },
    { 636, 136 },
    { 636, 212 },
    { 628, 212 },
    { 628, 179 },
    { 612, 179 },
    { 612, 233 },
    { 636, 233 },
    { 636, 406 },
    { 628, 406 },
    { 628, 374 },
    { 612, 374 },
    { 612, 406 },
    { 604, 406 },
    { 604, 374 },
    { 580, 374 },
    { 580, 363 },
    { 628, 363 },
    { 628, 341 },
    { 580, 341 },
    { 580, 330 },
    { 628, 330 },
    { 628, 309 },
    { 564, 309 },
    { 564, 374 },
    { 556, 374 },
    { 556, 341 },
    { 540, 341 },
    { 540, 395 },
    { 564, 395 },
    { 564, 492 },
    { 612, 492 },
    { 612, 525 },
    { 628, 525 },
    { 628, 471 },
    { 604, 471 },
    { 604, 460 },
    { 628, 460 },
    { 628, 438 },
    { 588, 438 },
    { 588, 471 },
    { 580, 471 },
    { 580, 395 },
    { 588, 395 },
    { 588, 428 },
    { 636, 428 },
    { 636, 568 },
    { 588, 568 },
    { 588, 622 },
    { 604, 622 },
    { 604, 590 },
    { 612, 590 },
    { 612, 622 },
    { 628, 622 },
    { 628, 590 },
    { 636, 590 },
    { 636, 633 },
    { 580, 633 },
    { 580, 600 },
    { 564, 600 },
    { 564, 633 },
    { 532, 633 },
    { 532, 622 },
    { 556, 622 },
    { 556, 600 },
    { 532, 600 },
    { 532, 590 },
    { 580, 590 },
    { 580, 568 },
    { 516, 568 },
    { 516, 600 },
    { 508, 600 },
    { 508, 503 },
    { 492, 503 },
    { 492, 622 },
    { 516, 622 },
    { 516, 633 },
    { 436, 633 },
    { 436, 622 },
    { 484, 622 },
    { 484, 600 },
    { 436, 600 },
    { 436, 590 },
    { 460, 590 },
    { 460, 557 },
    { 468, 557 },
    { 468, 590 },
    { 484, 590 },
    { 484, 492 },
    { 540, 492 },
    { 540, 525 },
    { 564, 525 },
    { 564, 536 },
    { 532, 536 },
    { 532, 503 },
    { 516, 503 },
    { 516, 557 },
    { 580, 557 },
    { 580, 525 },
    { 588, 525 },
    { 588, 557 },
    { 628, 557 },
    { 628, 536 },
    { 604, 536 },
    { 604, 503 },
    { 556, 503 },
    { 556, 471 },
    { 508, 471 },
    { 508, 460 },
    { 532, 460 },
    { 532, 428 },
    { 540, 428 },
    { 540, 460 },
    { 556, 460 },
    { 556, 406 },
    { 516, 406 },
    { 516, 438 },
    { 508, 438 },
    { 508, 406 },
    { 484, 406 },
    { 484, 395 },
    { 532, 395 },
    { 532, 330 },
    { 556, 330 },
    { 556, 309 },
    { 516, 309 },
    { 516, 374 },
    { 468, 374 },
    { 468, 406 },
    { 420, 406 },
    { 420, 438 },
    { 412, 438 },
    { 412, 395 },
    { 436, 395 },
    { 436, 341 },
    { 372, 341 },
    { 372, 363 },
    { 420, 363 },
    { 420, 374 },
    { 372, 374 },
    { 372, 428 },
    { 388, 428 },
    { 388, 395 },
    { 396, 395 },
    { 396, 438 },
    { 372, 438 },
    { 372, 492 },
    { 388, 492 },
    { 388, 460 },
    { 396, 460 },
    { 396, 492 },
    { 436, 492 },
    { 436, 471 },
    { 412, 471 },
    { 412, 460 },
    { 436, 460 },
    { 436, 428 },
    { 444, 428 },
    { 444, 460 },
    { 460, 460 },
    { 460, 428 },
    { 492, 428 },
    { 492, 438 },
    { 468, 438 },
    { 468, 460 },
    { 492, 460 },
    { 492, 471 },
    { 444, 471 },
    { 444, 525 },
    { 460, 525 },
    { 460, 492 },
    { 468, 492 },
    { 468, 536 },
    { 436, 536 },
    { 436, 503 },
    { 420, 503 },
    { 420, 536 },
    { 412, 536 },
    { 412, 503 },
    { 372, 503 },
    { 372, 590 },
    { 388, 590 },
    { 388, 525 },
    { 396, 525 },
    { 396, 557 },
    { 444, 557 },
    { 444, 568 },
    { 420, 568 },
    { 420, 633 },
    { 412, 633 },
    { 412, 568 },
    { 396, 568 },
    { 396, 633 },
    { 388, 633 },
    { 388, 600 },
    { 372, 600 },
    { 372, 633 },
    { 364, 633 },
    { 364, 536 },
    { 348, 536 },
    { 348, 633 },
    { 196, 633 },
    { 196, 622 },
    { 244, 622 },
    { 244, 600 },
    { 196, 600 },
    { 196, 557 },
    { 204, 557 },
    { 204, 590 },
    { 220, 590 },
    { 220, 557 },
    { 244, 557 },
    { 244, 536 },
    { 196, 536 },
    { 196, 525 },
    { 244, 525 },
    { 244, 503 },
    { 220, 503 },
    { 220, 428 },
    { 228, 428 },
    { 228, 492 },
    { 276, 492 },
    { 276, 525 },
    { 300, 525 },
    { 300, 536 },
    { 268, 536 },
    { 268, 503 },
    { 252, 503 },
    { 252, 568 },
    { 228, 568 },
    { 228, 590 },
    { 252, 590 },
    { 252, 622 },
    { 268, 622 },
    { 268, 590 },
    { 292, 590 },
    { 292, 568 },
    { 268, 568 },
    { 268, 557 },
    { 300, 557 },
    { 300, 600 },
    { 276, 600 },
    { 276, 622 },
    { 340, 622 },
    { 340, 600 },
    { 316, 600 },
    { 316, 590 },
    { 340, 590 },
    { 340, 536 },
    { 324, 536 },
    { 324, 568 },
    { 316, 568 },
    { 316, 525 },
    { 364, 525 },
    { 364, 503 },
    { 340, 503 },
    { 340, 492 },
    { 364, 492 },
    { 364, 471 },
    { 340, 471 },
    { 340, 460 },
    { 364, 460 },
    { 364, 406 },
    { 348, 406 },
    { 348, 438 },
    { 340, 438 },
    { 340, 406 },
    { 300, 406 },
    { 300, 428 },
    { 324, 428 },
    { 324, 503 },
    { 316, 503 },
    { 316, 471 },
    { 300, 471 },
    { 300, 503 },
    { 292, 503 },
    { 292, 460 },
    { 316, 460 },
    { 316, 438 },
    { 292, 438 },
    { 292, 406 },
    { 276, 406 },
    { 276, 471 },
    { 244, 471 },
    { 244, 428 },
    { 252, 428 },
    { 252, 460 },
    { 268, 460 },
    { 268, 395 },
    { 292, 395 },
    { 292, 374 },
    { 268, 374 },
    { 268, 363 },
    { 292, 363 },
    { 292, 341 },
    { 252, 341 },
    { 252, 406 },
    { 244, 406 },
    { 244, 341 },
    { 228, 341 },
    { 228, 406 },
    { 204, 406 },
    { 204, 438 },
    { 196, 438 },
    { 196, 395 },
    { 220, 395 },
    { 220, 309 },
    { 196, 309 },
    { 196, 298 },
    { 220, 298 },
    { 220, 276 },
    { 196, 276 },
    { 196, 244 },
    { 180, 244 },
    { 180, 330 },
    { 204, 330 },
    { 204, 374 },
    { 196, 374 },
    { 196, 341 },
    { 180, 341 },
    { 180, 460 },
    { 204, 460 },
    { 204, 471 },
    { 156, 471 },
    { 156, 492 },
    { 204, 492 },
    { 204, 503 },
    { 180, 503 },
    { 180, 536 },
    { 172, 536 },
    { 172, 503 },
    { 156, 503 },
    { 156, 536 },
    { 148, 536 },
    { 148, 471 },
    { 124, 471 },
    { 124, 406 },
    { 108, 406 },
    { 108, 492 },
    { 132, 492 },
    { 132, 503 },
    { 100, 503 },
    { 100, 406 },
    { 84, 406 },
    { 84, 557 },
    { 100, 557 },
    { 100, 525 },
    { 132, 525 },
    { 132, 536 },
    { 108, 536 },
    { 108, 568 },
    { 84, 568 },
    { 84, 590 },
    { 124, 590 },
    { 124, 557 },
    { 180, 557 },
    { 180, 568 },
    { 156, 568 },
    { 156, 590 },
    { 180, 590 },
    { 180, 633 },
    { 172, 633 },
    { 172, 600 },
    { 148, 600 },
    { 148, 568 },
    { 132, 568 },
    { 132, 622 },
    { 156, 622 },
    { 156, 633 },
    { 124, 633 },
    { 124, 600 },
    { 108, 600 },
    { 108, 633 }
  }
};